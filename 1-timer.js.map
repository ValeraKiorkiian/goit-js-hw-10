{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector(`button[data-start]`);\nstartBtn.disabled = true;\nconst dateTimePicker = document.querySelector(`#datetime-picker`);\nconst daysData = document.querySelector(`[data-days]`);\nconst hoursData = document.querySelector(`[data-hours]`);\nconst minutesData = document.querySelector(`[data-minutes]`);\nconst secondsData = document.querySelector(`[data-seconds]`);\n\nlet userSelectedDate = null;\nlet interval;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: '\"Please choose a date in the future\"',\n      });\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\nflatpickr(dateTimePicker, options);\n\nstartBtn.addEventListener(`click`, () => {\n  startTimer();\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n});\n\nfunction startTimer() {\n  interval = setInterval(() => {\n    const time = new Date();\n    const timeLeft = userSelectedDate - time;\n\n    if (timeLeft <= 0) {\n      clearInterval(interval);\n      dateTimePicker.disabled = false;\n    } else {\n      const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n      daysData.textContent = addLeadingZero(days);\n      hoursData.textContent = addLeadingZero(hours);\n      minutesData.textContent = addLeadingZero(minutes);\n      secondsData.textContent = addLeadingZero(seconds);\n    }\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","dateTimePicker","daysData","hoursData","minutesData","secondsData","userSelectedDate","interval","options","selectedDates","iziToast","flatpickr","startTimer","timeLeft","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GACpB,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAmB,KACnBC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,KAC1BI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,sCACjB,CAAO,EAEDV,EAAS,SAAW,EAEvB,CACH,EACAW,EAAUV,EAAgBO,CAAO,EAEjCR,EAAS,iBAAiB,QAAS,IAAM,CACvCY,EAAY,EACZZ,EAAS,SAAW,GACpBC,EAAe,SAAW,EAC5B,CAAC,EAED,SAASW,GAAa,CACpBL,EAAW,YAAY,IAAM,CAE3B,MAAMM,EAAWP,EADJ,IAAI,KAGjB,GAAIO,GAAY,EACd,cAAcN,CAAQ,EACtBN,EAAe,SAAW,OACrB,CACL,KAAM,CAAE,KAAAa,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGC,EAAUL,CAAQ,EAE5DX,EAAS,YAAciB,EAAeL,CAAI,EAC1CX,EAAU,YAAcgB,EAAeJ,CAAK,EAC5CX,EAAY,YAAce,EAAeH,CAAO,EAChDX,EAAY,YAAcc,EAAeF,CAAO,CACtD,CACG,EAAE,GAAI,CACT,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CAC1C"}